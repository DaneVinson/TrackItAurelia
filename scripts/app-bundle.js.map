{"version":3,"sources":["src/app.ts","src/category-service.ts","src/environment.ts","src/main.ts","src/shared/category-change.ts","C:/Users/dvinson/Documents/GitHub/TrackItAurelia/src/shared/Category.js","C:/Users/dvinson/Documents/GitHub/TrackItAurelia/src/shared/CategoryEntity.js","C:/Users/dvinson/Documents/GitHub/TrackItAurelia/src/shared/dataPoint.js","src/menu/menu.ts","src/resources/index.ts","src/dashboard/about/about.ts","src/dashboard/contact/contact.ts","src/dashboard/category/category-charting.ts","src/dashboard/category/category-component.ts","src/dashboard/category/category-data.ts","src/dashboard/category/category-details.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Router, RouterConfiguration } from 'aurelia-router';\nimport { inject } from 'aurelia-framework';\nimport { CategoryService } from './category-service';\n\n@inject(CategoryService)\nexport class App {\n  router: Router;\n\n  constructor(private categoryService: CategoryService) {\n  }\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.map([\n      { route: '', moduleId: 'dashboard/about/about', name: 'about'},\n      { route: 'about', moduleId: 'dashboard/about/about', name: 'about'},\n      { route: 'contact', moduleId: 'dashboard/contact/contact', name: 'contact'},\n      { route: 'dashboard', moduleId: 'dashboard/about/about', name: 'about'},\n      { route: 'dashboard/:id', moduleId: 'dashboard/category/category-component', name:'dashboard' }\n    ]);\n\n    this.router = router;\n  }\n}","export class CategoryService {\r\n    private categories: Category[];\r\n    private categoryEntities: CategoryEntity[];\r\n    public isBusy: boolean;\r\n\r\n    constructor() {\r\n        this.isBusy = false;\r\n        this.refreshCategories();\r\n    }\r\n\r\n    cancelCategoryChanges(id: string) {\r\n        var category = this.getCategory(id);\r\n        var categoryEntity = this.getCategoryEntity(id);\r\n        if (category && categoryEntity) {\r\n            categoryEntity.accountId = category.accountId;\r\n            categoryEntity.dataPoints = [];\r\n            categoryEntity.deleted = false;\r\n            categoryEntity.description = category.description;\r\n            categoryEntity.dirty = false;\r\n            categoryEntity.id = category.id;\r\n            categoryEntity.new = false;\r\n            categoryEntity.units = category.units;\r\n            categoryEntity.valid = true;\r\n        }\r\n    }\r\n\r\n    getCategory(id: string): Category {\r\n        if (!this.categories || this.categories.length == 0) {\r\n            return null;\r\n        }\r\n        return this.categories.find(c => c.id == id);\r\n    }\r\n\r\n    getCategories(refresh: boolean = false): Category[] {\r\n        if (!this.categories || refresh) {\r\n            this.refreshCategories();\r\n        }\r\n        return this.categories;\r\n    }\r\n\r\n    getCategoryEntities(refresh: boolean = false): CategoryEntity[] {\r\n        if (!this.categories || refresh) {\r\n            this.refreshCategories();\r\n        }\r\n        return this.categoryEntities;\r\n    }\r\n\r\n    getCategoryEntity(id: string): CategoryEntity {\r\n        if (!this.categories || this.categories.length == 0) {\r\n            return null;\r\n        }\r\n        return this.categoryEntities.find(c => c.id == id);\r\n    }\r\n\r\n    private refreshCategories() {\r\n        this.categories = this.callHttp();\r\n        if (!this.categories) {\r\n            this.categories = [];\r\n        }\r\n        this.categoryEntities = [];\r\n        if (this.categories && this.categories.length > 0) {\r\n            this.categories.forEach(c => {\r\n                this.categoryEntities.push({                   \r\n                    accountId: c.accountId,\r\n                    dataPoints: c.dataPoints,\r\n                    deleted: false,\r\n                    description: c.description,\r\n                    dirty: false,\r\n                    id: c.id,\r\n                    new: false,\r\n                    units: c.units,\r\n                    valid: true\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private callHttp(): Category[] {\r\n        return [\r\n            {\r\n                accountId: 'bilbo',\r\n                dataPoints: [],\r\n                description: 'Beansprout Length',\r\n                id: 'a',\r\n                units: 'inches'\r\n            },\r\n            {\r\n                accountId: 'bilbo',\r\n                dataPoints: [],\r\n                description: 'Cornstalk Height',\r\n                id: 'b',\r\n                units: 'inches'\r\n            },\r\n            {\r\n                accountId: 'bilbo',\r\n                dataPoints: [],\r\n                description: 'Percipiation',\r\n                id: 'c',\r\n                units: 'inches'\r\n            },\r\n            {\r\n                accountId: 'bilbo',\r\n                dataPoints: [],\r\n                description: 'High Temperature',\r\n                id: 'd',\r\n                units: 'degrees F'\r\n            },\r\n        ];\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class CategoryChange {\r\n  constructor(public category: CategoryEntity) { }\r\n}",null,null,null,"import { inject } from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport { CategoryService } from '../category-service';\r\nimport { CategoryChange } from '../shared/category-change';\r\n\r\n@inject(CategoryService, EventAggregator)\r\nexport class Menu {\r\n    public authenticated: boolean;\r\n    public categories: Category[];\r\n    public selectedCategory: Category;\r\n\r\n    constructor(private categoryService: CategoryService, private eventAggregator: EventAggregator) {\r\n        this.authenticated = true;\r\n        this.categories = this.categoryService.getCategories();\r\n        this.selectedCategory = null;\r\n        this.eventAggregator.subscribe(CategoryChange, message => this.select(message.contact));\r\n    }\r\n\r\n    public select(category: Category) {\r\n        this.selectedCategory = category;\r\n    }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class About {\r\n    title: string = 'About Trackit Aurelia';\r\n}","export class Contact {\r\n    title: string = 'Contact Dane';\r\n}","export class CategoryCharting {\r\n}\r\n","import { BindingEngine, inject } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { CategoryChange } from '../../shared/category-change';\r\nimport { CategoryService } from '../../category-service';\r\n\r\n@inject(CategoryService, BindingEngine, EventAggregator)\r\nexport class CategoryComponent {\r\n    public categoryEntity: CategoryEntity;\r\n    public displayModes: string[];\r\n    public selectedDisplayMode: string;\r\n    public title: string;\r\n\r\n    constructor(private categoryService: CategoryService, private bindingEngine: BindingEngine, private eventAggregator: EventAggregator) {\r\n        this.displayModes = [ 'Details', 'Data', 'Charting' ];\r\n        this.setDisplay(this.displayModes[0]);\r\n    }\r\n    \r\n    activate(params, routeConfig) {\r\n        var categoryEntity = this.categoryService.getCategoryEntity(params.id);\r\n        if (categoryEntity) {\r\n            this.categoryEntity = categoryEntity;\r\n            var category = this.categoryService.getCategory(this.categoryEntity.id);\r\n            this.title = category.description + ' (' + category.units + ')';\r\n            \r\n            this.bindingEngine\r\n                .propertyObserver(this.categoryEntity, 'description')\r\n                .subscribe(this.changedDescription);\r\n            this.bindingEngine\r\n                .propertyObserver(this.categoryEntity, 'units')\r\n                .subscribe(this.changedUnits);\r\n        }\r\n        else {\r\n            this.categoryEntity = null;\r\n            this.title = \"Select or Add a Category\";\r\n        }\r\n        this.eventAggregator.publish(new CategoryChange(this.categoryEntity));\r\n    }\r\n\r\n    cancel() {\r\n        this.categoryService.cancelCategoryChanges(this.categoryEntity.id);\r\n    }\r\n\r\n    changedDescription(newValue, oldValue) {\r\n        console.log(this);\r\n        console.log('old/new: ' + oldValue + ' / ' + newValue);\r\n    }\r\n\r\n    changedUnits(newValue, oldValue) {\r\n        console.log('old/new: ' + oldValue + ' / ' + newValue);\r\n    }\r\n\r\n    delete() {\r\n    }\r\n\r\n    save() {\r\n    }\r\n\r\n    setDisplay(displayMode: string){\r\n        var selected = this.displayModes.find(d => d == displayMode);\r\n        if (selected){\r\n            this.selectedDisplayMode = displayMode;\r\n        }\r\n        else {\r\n            this.selectedDisplayMode = this.displayModes[0];\r\n        }\r\n    }\r\n}","export class CategoryData {\r\n}\r\n","export class CategoryDetails {\r\n}\r\n"],"sourceRoot":".."}